{
    "Type":"Documentation",
    "Technology":"MPI",
    "Name":"MPI_Comm_create_group",
    "DirectoryName":"mpi_comm_create_group",
    "SharedDescription":true,
    "Description":"MPI_Comm_create_group allows MPI processes from a group (or subgroup of a group of) of a given communicator to create a new communicator. All MPI processes in the group specified must take part to the call. This contrasts with MPI_Comm_create for instance where all MPI processes in the entire communicator considered must participate. In addition, MPI_Comm_create accepts both intra and inter-communicators whereas MPI_Comm_create_group only accepts intra-communicators.",
    "Categories":[
        "Topology"
    ],
    "Languages": [
        {
            "Language":"C",
            "Parameters": [
                {
                    "Name":"old_communicator",
                    "Description":"The communicator from which the group of processes is extracted. The communicator passed must be an intra-communicator.",
                    "Type":"MPI_Comm",
                    "Optional":false
                },
                {
                    "Name":"group",
                    "Description":"The group containing the processes from the old communicator to include in the new communicator. It can contain the entire group of processes of the old communicator, or a subgroup or MPI_GROUP_EMPTY.",
                    "Type":"MPI_Group",
                    "Optional":false
                },
                {
                    "Name":"tag",
                    "Description":"In a multithreading context, multiple threads from a given MPI process may issue concurrent calls to MPI_Comm_create_group. Each MPI process may end up being calling MPI_Comm_create_group several times. In order for an MPI process to distinguish between multiple MPI_Comm_create_group calls, the tag is used, acting as an identifier. The tag passed cannot be a wildcard, such as MPI_ANY_TAG.",
                    "Type":"int",
                    "Optional":false
                },
                {
                    "Name":"new_communicator",
                    "Description":"The variable in which the created communicator is stored. If the group of the calling process is MPI_GROUP_EMPTY, MPI_COMM_NULL is stored instead.",
                    "Type":"MPI_Comm*",
                    "Optional":false
                }
            ],
            "Return":
                {
                    "Type":"int",
                    "Description":"The error code returned from the communicator creation.\n- MPI_SUCCESS: the routine successfully completed."
                }
        },
        {
            "Language":"FORTRAN-2008",
            "Parameters": [
                {
                    "Name":"old_communicator",
                    "Description":"The communicator from which the group of processes is extracted.The communicator passed must be an intra-communicator.",
                    "Type":"TYPE(MPI_Comm)",
                    "Optional":false,
                    "Intent":"IN"
                },
                {
                    "Name":"group",
                    "Description":"The group containing the processes from the old communicator to include in the new communicator. It can contain the entire group of processes of the old communicator, or a subgroup or MPI_GROUP_EMPTY.",
                    "Type":"TYPE(MPI_Group)",
                    "Optional":false,
                    "Intent":"IN"
                },
                {
                    "Name":"tag",
                    "Description":"In a multithreading context, multiple threads from a given MPI process may issue concurrent calls to MPI_Comm_create_group. Each MPI process may end up being calling MPI_Comm_create_group several times. In order for an MPI process to distinguish between multiple MPI_Comm_create_group calls, the tag is used, acting as an identifier. The tag passed cannot be a wildcard, such as MPI_ANY_TAG.",
                    "Type":"INTEGER",
                    "Optional":false,
                    "Intent":"IN"
                },
                {
                    "Name":"new_communicator",
                    "Description":"The variable in which the created communicator is stored. If the group of the calling process is MPI_GROUP_EMPTY, MPI_COMM_NULL is stored instead.",
                    "Type":"TYPE(MPI_Comm)",
                    "Optional":false,
                    "Intent":"OUT"
                },
                {
                    "Name":"ierror",
                    "Description":"The error code returned from the communicator creation.",
                    "Type":"INTEGER",
                    "Optional":true,
                    "Intent":"OUT"
                }
            ]
        },
        {
            "Language":"FORTRAN-90",
            "Parameters": [
                {
                    "Name":"old_communicator",
                    "Description":"The communicator from which the group of processes is extracted.The communicator passed must be an intra-communicator.",
                    "Type":"INTEGER",
                    "Optional":false
                },
                {
                    "Name":"group",
                    "Description":"The group containing the processes from the old communicator to include in the new communicator. It can contain the entire group of processes of the old communicator, or a subgroup or MPI_GROUP_EMPTY.",
                    "Type":"INTEGER",
                    "Optional":false
                },
                {
                    "Name":"tag",
                    "Description":"If multiple threads at a given process perform concurrent MPI_Comm_Create_Group operations, the user must distinguish these operations by providing different tag or comm arguments. Tag cannot be MPI_ANY_TAG.",
                    "Type":"INTEGER",
                    "Optional":false
                },
                {
                    "Name":"new_communicator",
                    "Description":"The variable in which the created communicator is stored. If the calling process is not part of the communicator created, MPI_COMM_NULL is stored instead.",
                    "Type":"INTEGER",
                    "Optional":false
                },
                {
                    "Name":"ierror",
                    "Description":"The error code returned from the communicator creation.",
                    "Type":"INTEGER",
                    "Optional":false
                }
            ]
        }
    ]
}
